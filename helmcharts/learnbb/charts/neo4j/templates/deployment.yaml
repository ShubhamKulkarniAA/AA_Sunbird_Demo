apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "common.names.name" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "common.names.name" . }}
      annotations:
        checksum/config: {{ .Files.Glob "files/*" | toYaml | sha256sum }}
    spec:
      serviceAccountName: {{ include "common.names.fullname" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      
      initContainers:
        - name: clear-store-lock
          image: busybox:latest
          command:
            - sh
            - -c
            - "find /var/lib/neo4j/data/databases/ -name store_lock -exec rm -f {} + || true"
          volumeMounts:
            - name: neo4j-data
              mountPath: /var/lib/neo4j/data


      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: {{ .Values.neo4j.env.name }}
              value: "{{ .Values.neo4j.env.value }}"
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          ports:
            {{- range .Values.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .targetPort }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          volumeMounts:
            - name: neo4j-data
              mountPath: "{{ .Values.neo4j.mountPath.neo4jData }}"
            {{- if .Values.configmap.enabled }}
            - name: shared-data
              mountPath: {{ .Values.neo4j.mountPath.sharedData }}
            {{- end }}

        {{- if .Values.configmap.enabled }}
        - name: {{ .Values.logstash.name }}
          image: {{ .Values.logstash.image }}
          imagePullPolicy: {{ .Values.logstash.imagePullPolicy }}
          volumeMounts:
            - name: config
              mountPath: {{ .Values.logstash.mountPath.config }}
              subPath: {{ .Values.logstash.mountPath.name }}
            - name: shared-data
              mountPath: {{ .Values.logstash.mountPath.sharedData }}
        {{- end }}

      volumes:
        {{- if .Values.configmap.enabled }}
        - name: config
          configMap:
            name: {{ .Values.logstash.configmap.name }}
            items:
              - key: {{ .Values.logstash.mountPath.name }}
                path: {{ .Values.logstash.mountPath.name }}
        - name: shared-data
          emptyDir: {}
        {{- end }}
        - name: neo4j-data
          persistentVolumeClaim:
            claimName: {{ .Values.neo4j.pvc.claimName }}

